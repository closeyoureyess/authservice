# kafka-values.yaml
replicaCount: 1  # Количество брокеров Kafka (1 для простоты в Minikube)

# Настройки режимов работы (используем стандартный режим с ZooKeeper или KRaft по умолчанию)
# Здесь можно оставить режим KRaft по умолчанию (в новых версиях Kafka), либо явно включить ZooKeeper.
# В данном примере используем настройки по умолчанию Bitnami (KRaft), что не требует ручной настройки ZooKeeper.

# Конфигурация listeners (слушателей) Kafka
listeners:
  # Внутренний клиентский listener (для приложений внутри кластера)
  client:
    protocol: PLAINTEXT    # Простой протокол без шифрования и SASL
  # Listener для обмена между брокерами (у нас один брокер, но тоже ставим PLAINTEXT)
  interbroker:
    protocol: PLAINTEXT    # Без шифрования/SASL для меж-брокерного общения
  # Внешний listener нам не нужен
  external:
    enabled: false         # Отключаем внешний listener (нет внешнего доступа)

# Advertised Listeners – как брокер будет сообщать свой адрес клиентам
advertisedListeners: PLAINTEXT://my-kafka.default.svc.cluster.local:9092
# ^ Здесь "my-kafka" — имя релиза Helm (и сервис Kafka), "default" — namespace.
# Это DNS-имя, по которому поды в кластере найдут Kafka. Мы указываем порт 9092 (PLAINTEXT).
# Если вы выбрали другое имя релиза или namespace, измените строку соответственно.

# Дополнительно: отключаем требования SASL полностью (если используется более старая версия чарта)
# В новых версиях достаточно выставить протокол PLAINTEXT, как выше.
# (Нет отдельного параметра "auth enable", поэтому не приводится.)

# Конфигурация ZooKeeper:
# Bitnami-чарт Kafka сам может развернуть ZooKeeper (если вы не используете режим KRaft).
# По умолчанию (на момент написания) чарт использует встроенный режим Kafka (KRaft) и ZooKeeper отключен.
# Для гарантии можно явно включить ZooKeeper, установив kraft.enabled=false (и тогда zookeeper.enabled=true).
# Однако в рамках локального развёртывания обычно достаточно значений по умолчанию.
